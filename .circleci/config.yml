# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

parameters:
  tf_dir:
    type: string
    default: "terraform/"
  tf_plan:
    type: string
    default: "terraform.tfplan"
  tf_image:
    type: string
    default: "hashicorp/terraform:light"

workflows:
  pipeline:
    jobs:
      - terraform-validate
      - terraform-lint
      - terraform-plan:
          requires:
            - terraform-validate
            - terraform-lint
      - terraform-apply-approval:
          type: approval
          requires:
            - terraform-plan
          filters:
            branches:
              only:
                - master
                - develop
      - terraform-apply:
          requires:
            - terraform-apply-approval
          filters:
            branches:
              only:
                - master
                - develop
      - terraform-destroy-approval:
          type: approval
          requires:
            - terraform-apply
          filters:
            branches:
              only:
                - master
                - develop
      - terraform-destroy:
          requires:
            - terraform-destroy-approval
          filters:
            branches:
              only:
                - master
                - develop

jobs:

  terraform-validate:
    docker:
      - image: << pipeline.parameters.tf_image >>
    steps:
      - checkout
      - run: terraform init << pipeline.parameters.tf_dir >>
      - run: terraform validate << pipeline.parameters.tf_dir >>

  terraform-lint:
    docker:
      - image: wata727/tflint
    steps:
      - checkout
      - run: tflint << pipeline.parameters.tf_dir >>

  terraform-plan:
    docker:
      - image: << pipeline.parameters.tf_image >>
    steps:
      - checkout
      - run: terraform init << pipeline.parameters.tf_dir >>
      - run: terraform plan -out << pipeline.parameters.tf_plan >> << pipeline.parameters.tf_dir >>
      - persist_to_workspace:
          root: .
          paths:
            - << pipeline.parameters.tf_plan >>

  terraform-apply:
    docker:
      - image: << pipeline.parameters.tf_image >>
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: terraform init << pipeline.parameters.tf_dir >>
      - run: terraform apply -auto-approve << pipeline.parameters.tf_plan >>
      - run: echo "Website - $(terraform output alb_public_address)"

  terraform-destroy:
    docker:
      - image: << pipeline.parameters.tf_image >>
    steps:
      - checkout
      - run: terraform init << pipeline.parameters.tf_dir >>
      - run: terraform destroy -auto-approve << pipeline.parameters.tf_dir >>
